/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: "java-library"
apply from: "${rootProject.projectDir.absolutePath}/gradle/java.gradle"

dependencies {
  implementation(project(":modules:core"))
  implementation(project(":modules:api"))
  implementation(project(":modules:network-api"))
  implementation(project(":modules:table"))
  implementation("org.apache.calcite:calcite-core")
  implementation("org.apache.calcite:calcite-linq4j")
  implementation("org.apache.calcite.avatica:avatica-core")
  implementation("org.codehaus.janino:janino")
  implementation("org.codehaus.janino:commons-compiler")
  implementation("com.fasterxml.jackson.core:jackson-core")
  implementation("com.fasterxml.jackson.core:jackson-databind")
  implementation("com.fasterxml.jackson.core:jackson-annotations")
  implementation("com.jayway.jsonpath:json-path")
  implementation("org.reflections:reflections")
  implementation("org.javassist:javassist")
  implementation("com.esri.geometry:esri-geometry-api")
  implementation("org.checkerframework:checker-qual")


  annotationProcessor(project(":modules:network-annotation-processor"))

  // TODO: Check the fmpp stuff and update accordingly!

  task copyFmppResources(type: Copy) {
    from "src/main/codegen"
    into "$buildDir/codegen"
  }

  task resolveParserTemplate(type: Copy) {
    from { jarTree(configurations.calcite-core.singleFile)}
    into "$buildDir/"
  }



}