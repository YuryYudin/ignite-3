/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id 'base'
  id "com.github.johnrengelman.shadow" version "5.2.0" apply false
  id 'nebula.ospackage' version "$ospackagePluginVersion" apply false
  id 'nebula.ospackage-application-daemon' version "$ospackagePluginVersion" apply false
  id "com.github.spotbugs" version "$spotBugsPluginVersion" apply false
  id "com.gorylenko.gradle-git-properties" version "$gitPropertiesVersion" apply false
  id 'org.nosphere.apache.rat' version "$apacheRatPluginVersion" apply false
  id 'org.apache.calcite.buildtools.fmpp.FmppPlugin' version "$calciteVersion" apply false
  id 'com.intershop.gradle.javacc' version "4.0.1" apply false
}

allprojects {
  group = 'org.apache.ignite'
  version = "${projectVersion}"

  // output all failed tests after build is finished
  ext.failedTests = []
  tasks.withType(Test) {
    afterTest { TestDescriptor descriptor, TestResult result ->
      if(result.resultType == org.gradle.api.tasks.testing.TestResult.ResultType.FAILURE){
        failedTests << ["${descriptor.className}::${descriptor.name}"]
      }
    }
  }

  gradle.buildFinished {
    if(!failedTests.empty){
      println ""
      println "Failed tests for ${project.path}:"
      failedTests.each { failedTest ->
        println failedTest
      }
    }
  }
}

apply from: "${rootProject.projectDir.absolutePath}/gradle/packaging.gradle"

ext {
  buildNumber = getCommitNum()
}
